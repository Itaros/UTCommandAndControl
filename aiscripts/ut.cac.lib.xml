<?xml version="1.0" encoding="UTF-8"?>
<aiscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="ut.cac.lib" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!-- this is basically just a Script which executes previously given Orders in order and falls back to a logical default behavior depending on context (a very stupid script - the logic is to be implemented in other scripts) -->
  <interrupts>
    <library>
      <handler name="OrderlistControl">
        <!-- 
      add a new Order to the queue - param2 = Order List; param3 = Position in List (0=end; 1=first, interrupt current Order (will be repeated), any other Number: Insert at Position)
      Order List Structure is a table, which contains all Info about the Script.
      -->
        <conditions>
          <check_any>
            <event_object_signalled object="this.ship" param="'new order'"/>
            <event_object_signalled object="this.ship" param="'interrupt order'"/>
            <event_object_signalled object="this.ship" param="'next order'"/>
          </check_any>
        </conditions>
        <actions>
          <debug_text filter="general" chance="@this.$debug * 100" text="'%1 %2 %3 %4:\nevent.param= %5 event.param2= %6 event.param3= %7'.[player.age,this.name,this.container.name,event.name,event.param,event.param2,event.param3]"/>
          <do_if value="event.param == 'new order' or event.param == 'interrupt order'">
            <do_if value="typeof event.param2 == datatype.list" negate="true">
              <!-- a List of new Orders has been passed instead of a single Order - make it a List for compatibility with multi-order-adding -->
              <set_value name="$new_orders" exact="[ event.param2 ]"/>
            </do_if>
            <do_else>
              <set_value name="$new_orders" exact="event.param2"/>
            </do_else>
            <do_if value="event.param == 'interrupt order'">
              <!-- add Order as first one -->
              <set_value name="$new_order_pos" exact="1"/>
            </do_if>
            <do_elseif value="event.param3 ge 1">
              <!-- add Order at specified position -->
              <set_value name="$new_order_pos" exact="event.param3"/>
            </do_elseif>
            <do_else>
              <!-- add Order as last one -->
              <set_value name="$new_order_pos" exact="this.$orderlist.count + 1"/>
            </do_else>
            <!-- Write Logbook Entry -->
            <do_if value="this.$ut_cac_settings.$loglevel ge param.ut_cac.loglevel.$ordergiven">
              <set_value name="$logbookentry" exact="{5554203,101}.[param.ut_cac.loglevel.$ordergiven,this.container.name,this.name]"/>
              <do_all exact="$new_orders.count" counter="$i" reverse="false">
                <do_if value="$new_orders.{$i}.$displayname?">
                  <set_value name="$logbookentry" exact="{5554203,114}.[$logbookentry,$new_orders.{$i}.$displayname]"/>
                </do_if>
              </do_all>
              <write_to_logbook category="general" object="$actor.container" interaction="guidance" text="$logbookentry"/>
            </do_if>
            <!-- reverse to keep the order of the new orders, we just want the list to be inserted at the specified position and going forward through the list would reverse their order -->
            <do_all exact="$new_orders.count" counter="$i" reverse="true">
              <do_if value="$new_order_pos == 1" comment="insert as first order interrupting the current one">
                <!-- ToDo: implement Condition for uninterruptable Orders like Docking, which should not be aborted (insert as second in this case)-->
                <do_if value="true">
                  <set_value name="this.$orderlist.{1}" exact="$new_orders.{$i}" operation="insert"/>
                  <abort_scripts entity="this"/>
                  <resume label="start"/>
                </do_if>
                <do_else>
                  <set_value name="this.$orderlist.{2}" exact="$new_orders.{$i}" operation="insert"/>
                </do_else>
              </do_if>
              <do_else comment="insert order at specific position in queue">
                <set_value name="this.$orderlist.{$new_order_pos}" exact="$new_orders.{$i}" operation="insert"/>
              </do_else>
            </do_all>
          </do_if>
          <do_elseif value="event.param == 'next order'">
            <do_if value="this.$ut_cac_settings.$loglevel ge param.ut_cac.loglevel.$ordergiven and this.$orderlist.{1}.$displayname?">
              <do_if value="this.$orderlist.{2}? and this.$orderlist.{2}.$displayname?">
                <write_to_logbook category="general" object="$actor.container" interaction="guidance" text="{5554203,112}.[param.ut_cac.loglevel.$ordergiven,this.container.name,this.name,this.$orderlist.{1}.$displayname,this.$orderlist.{2}.$displayname]"/>
              </do_if>
              <do_else>
                <write_to_logbook category="general" object="$actor.container" interaction="guidance" text="{5554203,113}.[param.ut_cac.loglevel.$ordergiven,this.container.name,this.name,this.$orderlist.{1}.$displayname]"/>
              </do_else>
            </do_if>
            <remove_value name="this.$orderlist.{1}"/>
            <abort_scripts entity="this"/>
            <resume label="start"/>
          </do_elseif>
        </actions>
      </handler>
    </library>
  </interrupts>
</aiscript>
