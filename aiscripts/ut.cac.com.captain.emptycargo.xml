<?xml version="1.0" encoding="UTF-8" ?>
<aiscript name="ut.cac.com.captain.emptycargo" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/aiscripts.xsd">
  <!--
    This Script attempts to empty the Cargo Bay of the current Ship.
    -> first it looks which wares are inside the Cargobay to sell
    -> then it finds Sell Offers in the current Sector and temporarily stores them
    -> as next it adds these sell Orders (nearest first, them from this the nearest etc.) to the Trade List and adds a single Trade run per item to this.$orderlist
    -> next it looks in the Cluster for Tradeoffers of the remaining Wares which couldnt be sold and then continues in this Sector to Sell wares (can be turned off)
    -> as last all Cargo which cannt be sold is thrown out (Selling stuff can be skipped if the Cargobay should just be emptied)
    
    Note: this Script is not intended to look for Profits - it is just intended to empty the Cargobay somewhere without wasting it.
  -->
  <params>
    <param name="params" default="false" comment="pass a single Table filled with the wanted param Values here to make calls via list possible (always has priority)"/>
    <param name="onlysector" default="false" comment="dont switch the Sector when looking for Sell Offers, prefer to throw cargo out" />
    <param name="onlydrop" default="false" comment="just throw out all unneeded cargo, dont try to sell it first (far faster, but wasteful)"/>
    <param name="ignorelist" default="[ware.fuelcells]" comment="a List with Wares to Ignore for sellling/dropping"/>
  </params>
  <attention min="unknown">
    <actions>
      <do_if value="$params">
        <do_if value="$params.$onlysector?">
          <set_value name="$onlysector" exact="$params.$onlysector"/>
        </do_if>
        <do_if value="$params.$onlydrop?">
          <set_value name="$onlydrop" exact="$params.$onlydrop"/>
        </do_if>
        <do_if value="$params.$ignorelist?">
          <set_value name="$ignorelist" exact="$params.$ignorelist"/>
        </do_if>
      </do_if>
      
      <!-- Create List of Wares to sell/drop-->
      <set_value name="$warelist" exact="this.ship.cargo.list.clone"/>
      <do_all exact="$ignorelist.count" counter="$i">
        <do_if value="this.ship.cargo.{$ignorelist.{$i}}.count">
          <remove_value name="$warelist.{$warelist.indexof.{$ignorelist.{$i}}}"/>
        </do_if>
      </do_all>
      <debug_text filter="general" chance="this.$debug * 100" text="'%1 %2 %3 Trying so sell these Wares somewhere or drop them:\n%4'.[player.age,this.name,this.container.name,$warelist]"/>
      
      <!-- Jump forward to Drop Wares -->
      <do_if value="$onlydrop">
        <resume label="drop wares" comment="goto line 103"/>
      </do_if>
      <set_value name="$sector" exact="this.sector"/>
      <label name="search sector"/>
      <!-- find buy Offers in current Sector where we can loos the whole amount in one trade run -->
      <create_list name="$buyoffers"/>
      <do_all exact="$warelist.count" counter="$i" reverse="true">
        <find_buy_offer result="$buyoffer" space="$sector" wares="$warelist.{$i}" multiple="false">
          <amount min="this.ship.cargo.{$warelist.{$i}}.count"/>
        </find_buy_offer>
        <do_if value="$buyoffer.available">
          <append_to_list name="$buyoffers" exact="$buyoffer"/>
          <remove_value name="$warelist.{$i}"/>
        </do_if>
      </do_all>
      <debug_text filter="general" chance="this.$debug * 100" text="'%1 %2 %3 Found %4 Buy Offers in sector'.[player.age,this.name,this.container.name,$buyoffers.count]"/>
      
      <!-- add these Buy Orders to the Trading Queue sorted by shortest Distance to next Trade and add a Trade run order for each -->
      <set_value name="$currentzone" exact="this.zone"/>
      <!-- Path Length for small Ships, raw Distance for Big Ships -->
      <do_if value="this.ship.class == class.ship_m or this.ship.class == class.ship_s or this.ship.class == class.ship_xs">
        <set_value name="$mindistance" exact="999"/>
      </do_if>
      <do_else>
        <set_value name="$mindistance" exact="1e12m"/>
      </do_else>
      <set_value name="$mindistindex" exact="null"/>
      <do_while value="$buyoffers.count">
        <do_all exact="$buyoffers.count" counter="$i">
          <!-- Offer is in current Zone - just add it to the Trade Orders -->
          <do_if value="$buyoffers.{$i}.owner.zone == $currentzone">
            <add_sell_order object="this.ship" trade="$buyoffers.{$i}" amount="this.ship.cargo.{$warelist.{$i}}.count" price="$buyoffers.{$i}.unitprice"/>
            <append_to_list name="this.$orderlist" exact="table[$script='ut.cac.com.captain.performsingletraderun',$repeat=0]"/>
            <remove_value name="$buyoffers.{$i}"/>
          </do_if>
          <!-- Offer is somewhere else - if its closer than the previous Offer save it, if not wait for next iteration -->
          <!-- Use Tube Network for small Ships... -->
          <do_if value="this.ship.class == class.ship_m or this.ship.class == class.ship_s or this.ship.class == class.ship_xs">
            <get_global_path component="$result" multiple="true" usehighways="true">
              <start object="this.ship"/>
              <end object="$buyoffers.{$i}.owner"/>
            </get_global_path>
            <do_if value="$result.count lt $mindistance">
              <set_value name="$mindistance" exact="this.ship.distanceto.{$buyoffers.{$i}.owner}"/>
              <set_value name="$mindistindex" exact="$i"/>
            </do_if>
          </do_if>
          <!-- ...or Raw Distance for Big Ships -->
          <do_elseif value="this.ship.distanceto.{$buyoffers.{$i}.owner} lt $mindistance">
            <set_value name="$mindistance" exact="this.ship.distanceto.{$buyoffers.{$i}.owner}"/>
            <set_value name="$mindistindex" exact="$i"/>
          </do_elseif>
        </do_all>
        <debug_text filter="general" chance="this.$debug * 100" text="'%1 %2 %3 Adding Buy Offer to Trade List:\n%4'.[player.age,this.name,this.container.name,$buyoffers.{$mindistindex}]"/>
        <add_sell_order object="this.ship" trade="$buyoffers.{$mindistindex}" amount="this.ship.cargo.{$warelist.{$mindistindex}.count}" price="$buyoffers.{$mindistindex}.unitprice"/>
        <append_to_list name="this.$orderlist" exact="table[$script='ut.cac.com.captain.performsingletraderun',$repeat=0,$command=command.freetrade]"/>
        <set_value name="$currentzone" exact="$buyoffers.{$mindistindex}.zone"/>
        <!-- Path Length for small Ships, raw Distance for Big Ships -->
        <do_if value="this.ship.class == class.ship_m or this.ship.class == class.ship_s or this.ship.class == class.ship_xs">
          <set_value name="$mindistance" exact="999"/>
        </do_if>
        <do_else>
          <set_value name="$mindistance" exact="1e12m"/>
        </do_else>
        <set_value name="$mindistindex" exact="null"/>
        <remove_value name="$buyoffers.{$mindistindex}"/>
      </do_while>
      
      <!-- Cluster-wide search for Offers - if one is found add it to the Trade list and continue in the Sector there with search for further Offers -->
      <do_if value="not $onlysector">
        <do_all exact="$warelist.count" counter="$i" reverse="true">
          <find_buy_offer result="$buyoffer" space="this.cluster" wares="$warelist.{$i}" multiple="false">
            <amount min="this.ship.cargo.{$warelist.{$i}}.count"/>
          </find_buy_offer>
          <do_if value="$buyoffer.available">
            <append_to_list name="$buyoffers" exact="$buyoffer"/>
            <remove_value name="$warelist.{$i}"/>
            <set_value name="$sector" exact="$buyoffer.owner.sector"/>
            <debug_text filter="general" chance="this.$debug * 100" text="'%1 %2 %3 Found Trade Offer in another Sector, continuing there:\n%4'.[player.age,this.name,this.container.name,$buyoffer]"/>
            <resume label="search sector" comment="goto line 47"/>
          </do_if>
        </do_all>
      </do_if>
      
      <!-- Drop Wares we cannt sell somewhere or just drop them if explicitly told so -->
      <label name="drop wares"/>
      <debug_text filter="general" chance="this.$debug * 100" text="'%1 %2 %3 Dropping Wares:\n%4'.[player.age,this.name,this.container.name,$warelist]"/>
      <do_all exact="$warelist.count" counter="$i">
        <drop_cargo object="this.ship" ware="$warelist.{$i}" exact="this.ship.cargo.{$warelist.{$i}}.count"/>
      </do_all>
    </actions>
  </attention>
  <on_abort>
  </on_abort>
</aiscript>